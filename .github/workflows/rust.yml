name: CI

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  linter:
    name: Linter 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions-rs/toolchain@v1
      name: Install Rust
      with:
        toolchain: stable
        override: true
    - uses: actions-rs/cargo@v1
      name: Linter 
      with:
        command: fmt
        args: --all -- --check

  build:
    name: Build 
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: Default
            opts: -r
          - name: All-features
            opts: --all-features
          - name: Observations
            opts: --features "obs"
          - name: Navigation
            opts: --features "nav"
          - name: QC
            opts: --features "qc"
          - name: Meteo
            opts: --features "meteo"
          - name: Clock
            opts: --features "clock"
          - name: ANTEX
            opts: --features "antex"
          - name: DORIS RINEX
            opts: --features "doris"
          - name: Processing
            opts: --features "processing"
          - name: Full
            opts: --features "full"

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    
    - uses: actions-rs/toolchain@v1
      name: Install Rust
      with:
        toolchain: stable
        override: true
    
    - name: Install Dependencies
      run: |
        sudo apt-get update

    - name: ${{ matrix.name }} 
      run: |
        cargo clean && cargo update && cargo build ${{ matrix.opts }}
    
    - name: Tests
      run: |
        cargo clean && cargo update && cargo build ${{ matrix.opts }}
   
    - uses: actions-rs/cargo@v1
      name: Test (all features)
      with:
        command: test
        args: --all-features
    
  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    
    - uses: actions-rs/toolchain@v1
      name: Install nightly
      with:
        toolchain: nightly
        override: true
    
    - name: Documentation
      run: |
        ./tools/builddoc.sh
